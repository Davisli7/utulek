// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Utulek1.Infrastructure;

#nullable disable

namespace Utulek1.Infrastructure.Migrations
{
    [DbContext(typeof(UtulekDbContext))]
    [Migration("20251027193156_PrvniMigrace")]
    partial class PrvniMigrace
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Utulek1.Domain.Entities.AdoptionRequest", b =>
                {
                    b.Property<int>("RequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RequestID"));

                    b.Property<int>("AnimalID")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasDefaultValue("Pending");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("RequestID");

                    b.HasIndex("AnimalID");

                    b.HasIndex("UserID");

                    b.ToTable("AdoptionRequests");
                });

            modelBuilder.Entity("Utulek1.Domain.Entities.Animal", b =>
                {
                    b.Property<int>("AnimalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AnimalID"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("BreedID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SpeciesID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasDefaultValue("Available");

                    b.HasKey("AnimalID");

                    b.HasIndex("BreedID");

                    b.HasIndex("SpeciesID");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("Utulek1.Domain.Entities.Breed", b =>
                {
                    b.Property<int>("BreedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BreedID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SpeciesID")
                        .HasColumnType("int");

                    b.HasKey("BreedID");

                    b.HasIndex("SpeciesID");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("Utulek1.Domain.Entities.Photo", b =>
                {
                    b.Property<int>("PhotoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PhotoID"));

                    b.Property<int>("AnimalID")
                        .HasColumnType("int");

                    b.Property<string>("PhotoURL")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PhotoID");

                    b.HasIndex("AnimalID");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Utulek1.Domain.Entities.Species", b =>
                {
                    b.Property<int>("SpeciesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SpeciesID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("SpeciesID");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("Utulek1.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasDefaultValue("User");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Utulek1.Domain.Entities.AdoptionRequest", b =>
                {
                    b.HasOne("Utulek1.Domain.Entities.Animal", "Animal")
                        .WithMany("AdoptionRequests")
                        .HasForeignKey("AnimalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Utulek1.Domain.Entities.User", "User")
                        .WithMany("AdoptionRequests")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Utulek1.Domain.Entities.Animal", b =>
                {
                    b.HasOne("Utulek1.Domain.Entities.Breed", "Breed")
                        .WithMany("Animals")
                        .HasForeignKey("BreedID");

                    b.HasOne("Utulek1.Domain.Entities.Species", "Species")
                        .WithMany("Animals")
                        .HasForeignKey("SpeciesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Breed");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("Utulek1.Domain.Entities.Breed", b =>
                {
                    b.HasOne("Utulek1.Domain.Entities.Species", "Species")
                        .WithMany("Breeds")
                        .HasForeignKey("SpeciesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Species");
                });

            modelBuilder.Entity("Utulek1.Domain.Entities.Photo", b =>
                {
                    b.HasOne("Utulek1.Domain.Entities.Animal", "Animal")
                        .WithMany("Photos")
                        .HasForeignKey("AnimalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("Utulek1.Domain.Entities.Animal", b =>
                {
                    b.Navigation("AdoptionRequests");

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("Utulek1.Domain.Entities.Breed", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Utulek1.Domain.Entities.Species", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("Breeds");
                });

            modelBuilder.Entity("Utulek1.Domain.Entities.User", b =>
                {
                    b.Navigation("AdoptionRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
